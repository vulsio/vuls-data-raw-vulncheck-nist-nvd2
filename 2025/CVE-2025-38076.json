{
	"id": "CVE-2025-38076",
	"sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
	"vulnStatus": "Awaiting Analysis",
	"published": "2025-06-18T10:15:41.110",
	"lastModified": "2025-06-18T13:46:52.973",
	"descriptions": [
		{
			"lang": "en",
			"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nalloc_tag: allocate percpu counters for module tags dynamically\n\nWhen a module gets unloaded it checks whether any of its tags are still in\nuse and if so, we keep the memory containing module's allocation tags\nalive until all tags are unused.  However percpu counters referenced by\nthe tags are freed by free_module().  This will lead to UAF if the memory\nallocated by a module is accessed after module was unloaded.\n\nTo fix this we allocate percpu counters for module allocation tags\ndynamically and we keep it alive for tags which are still in use after\nmodule unloading.  This also removes the requirement of a larger\nPERCPU_MODULE_RESERVE when memory allocation profiling is enabled because\npercpu memory for counters does not need to be reserved anymore."
		},
		{
			"lang": "es",
			"value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: alloc_tag: asignar contadores por CPU para etiquetas de módulo dinámicamente Cuando se descarga un módulo, este verifica si alguna de sus etiquetas aún está en uso y, de ser así, mantenemos activa la memoria que contiene las etiquetas de asignación del módulo hasta que todas las etiquetas estén sin usar. Sin embargo, los contadores por CPU referenciados por las etiquetas son liberados por free_module(). Esto conducirá a UAF si se accede a la memoria asignada por un módulo después de que el módulo se haya descargado. Para corregir esto, asignamos contadores por CPU para etiquetas de asignación de módulo dinámicamente y los mantenemos activos para las etiquetas que aún están en uso después de la descarga del módulo. Esto también elimina el requisito de un PERCPU_MODULE_RESERVE más grande cuando el perfil de asignación de memoria está habilitado porque la memoria por CPU para los contadores ya no necesita reservarse."
		}
	],
	"references": [
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/12ca42c237756182aad8ab04654c952765cb9061"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/3cc733e6d96c938d2b82be96858a0ab900eb6fdc"
		}
	],
	"metrics": {},
	"vcConfigurations": [
		{
			"nodes": [
				{
					"operator": "OR",
					"cpeMatch": [
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:6.13:*:*:*:*:*:*:*",
							"matchCriteriaId": ""
						},
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionStartIncluding": "6.14",
							"versionEndExcluding": "6.14.9"
						}
					]
				}
			]
		}
	],
	"vcVulnerableCPEs": [
		"cpe:2.3:o:linux:linux_kernel:6.13:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.2:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.3:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.4:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.5:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.6:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.7:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14.8:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc1:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc2:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc3:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc4:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc5:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc6:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.14:rc7:*:*:*:*:*:*"
	]
}
