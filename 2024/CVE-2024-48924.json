{
	"id": "CVE-2024-48924",
	"sourceIdentifier": "security-advisories@github.com",
	"vulnStatus": "Awaiting Analysis",
	"published": "2024-10-17T21:15:14.070",
	"lastModified": "2024-10-18T12:52:33.507",
	"descriptions": [
		{
			"lang": "en",
			"value": "### Impact\n\nWhen this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by an attacker that sends data contrived to produce hash collisions, leading to large CPU consumption disproportionate to the size of the data being deserialized.\n\nThis is similar to [a prior advisory](https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf), which provided an inadequate fix for the hash collision part of the vulnerability.\n\n### Patches\n\nThe following steps are required to mitigate this risk.\n\n1. Upgrade to a version of the library where a fix is available.\n1. Review the steps in [this previous advisory](https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf) to ensure you have your application configured for untrusted data.\n\n### Workarounds\n\nIf upgrading MessagePack to a patched version is not an option for you, you may apply a manual workaround as follows:\n\n1. Declare a class that derives from `MessagePackSecurity`.\n2. Override the `GetHashCollisionResistantEqualityComparer<T>` method to provide a collision-resistant hash function of your own and avoid calling `base.GetHashCollisionResistantEqualityComparer<T>()`.\n3. Configure a `MessagePackSerializerOptions` with an instance of your derived type by calling `WithSecurity` on an existing options object.\n4. Use your custom options object for all deserialization operations. This may be by setting the `MessagePackSerializer.DefaultOptions` static property, if you call methods that rely on this default property, and/or by passing in the options object explicitly to any `Deserialize` method.\n\n### References\n\n- Learn more about best security practices when reading untrusted data with [MessagePack 1.x](https://github.com/MessagePack-CSharp/MessagePack-CSharp/tree/v1.x#security) or [MessagePack 2.x](https://github.com/MessagePack-CSharp/MessagePack-CSharp#security).\n- The .NET team's [discussion on hash collision vulnerabilities of their `HashCode` struct](https://github.com/GrabYourPitchforks/runtime/blob/threat_models/docs/design/security/System.HashCode.md).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Start a public discussion](https://github.com/MessagePack-CSharp/MessagePack-CSharp/discussions)\n* [Email us privately](mailto:andrewarnott@live.com)"
		},
		{
			"lang": "es",
			"value": "### Impacto Cuando esta librería se utiliza para deserializar datos de un paquete de mensajes de una fuente no confiable, existe el riesgo de un ataque de denegación de servicio por parte de un atacante que envía datos diseñados para producir colisiones de hash, lo que lleva a un gran consumo de CPU desproporcionado al tamaño de los datos que se deserializan. Esto es similar a [un aviso anterior](https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf), que proporcionó una solución inadecuada para la parte de colisión de hash de la vulnerabilidad. ### Parches Se requieren los siguientes pasos para mitigar este riesgo. 1. Actualice a una versión de la librería donde haya una solución disponible. 1. Revise los pasos en [este aviso anterior](https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-7q36-4xx7-xcxf) para asegurarse de que su aplicación esté configurada para datos no confiables. ### workarounds Si actualizar MessagePack a una versión parcheada no es una opción para usted, puede aplicar un workaround manual de la siguiente manera: 1. Declare una clase que derive de `MessagePackSecurity`. 2. Anule el método `GetHashCollisionResistantEqualityComparer` para proporcionar una función hash resistente a colisiones propia y evitar llamar a `base.GetHashCollisionResistantEqualityComparer()`. 3. Configure `MessagePackSerializerOptions` con una instancia de su tipo derivado llamando a `WithSecurity` en un objeto de opciones existente. 4. Utilice su objeto de opciones personalizado para todas las operaciones de deserialización. Esto puede hacerse configurando la propiedad estática `MessagePackSerializer.DefaultOptions`, si llama a métodos que dependen de esta propiedad predeterminada, y/o pasando el objeto de opciones explícitamente a cualquier método `Deserialize`. ### Referencias: Obtenga más información sobre las mejores prácticas de seguridad al leer datos no confiables con [MessagePack 1.x](https://github.com/MessagePack-CSharp/MessagePack-CSharp/tree/v1.x#security) o [MessagePack 2.x](https://github.com/MessagePack-CSharp/MessagePack-CSharp#security). - El equipo .NET [discusión sobre las vulnerabilidades de colisión de hash de su estructura `HashCode`](https://github.com/GrabYourPitchforks/runtime/blob/threat_models/docs/design/security/System.HashCode.md). ### Para obtener más información Si tiene alguna pregunta o comentario sobre este aviso: * [Inicie una discusión pública](https://github.com/MessagePack-CSharp/MessagePack-CSharp/discussions) * [Envíenos un correo electrónico privado](mailto:andrewarnott@live.com)"
		}
	],
	"references": [
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/MessagePack-CSharp/MessagePack-CSharp/commit/8e599af0798b45008f8b293a7f233e4878f11ed5"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/MessagePack-CSharp/MessagePack-CSharp/commit/f8d40b3ad0be01c6e56cb51ecea81f59d98c192d"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/MessagePack-CSharp/MessagePack-CSharp/security/advisories/GHSA-4qm4-8hg2-g2xm"
		}
	],
	"metrics": {
		"cvssMetricV40": [
			{
				"source": "security-advisories@github.com",
				"type": "Secondary",
				"cvssData": {
					"version": "4.0",
					"vectorString": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",
					"baseScore": 8.7,
					"baseSeverity": "HIGH",
					"attackVector": "NETWORK",
					"attackComplexity": "LOW",
					"attackRequirements": "NONE",
					"privilegesRequired": "NONE",
					"userInteraction": "NONE",
					"exploitMaturity": "NOT_DEFINED",
					"modifiedAttackVector": "NOT_DEFINED",
					"modifiedAttackComplexity": "NOT_DEFINED",
					"modifiedAttackRequirements": "NOT_DEFINED",
					"modifiedPrivilegesRequired": "NOT_DEFINED",
					"modifiedUserInteraction": "NOT_DEFINED",
					"safety": "NOT_DEFINED",
					"automatable": "NOT_DEFINED",
					"providerUrgency": "NOT_DEFINED",
					"recovery": "NOT_DEFINED",
					"valueDensity": "NOT_DEFINED",
					"vulnerabilityResponseEffort": "NOT_DEFINED"
				}
			}
		]
	},
	"weaknesses": [
		{
			"source": "security-advisories@github.com",
			"type": "Secondary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-328"
				}
			]
		}
	],
	"vcConfigurations": [
		{
			"nodes": [
				{
					"operator": "OR",
					"cpeMatch": [
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:a:messagepack:messagepack:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionEndExcluding": "2.5.187"
						},
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:a:messagepack:messagepack:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionStartIncluding": "2.6.95-alpha",
							"versionEndExcluding": "3.0.214-rc.1"
						}
					]
				}
			]
		}
	],
	"vcVulnerableCPEs": [
		"cpe:2.3:a:messagepack:messagepack:1.0.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.0.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.0.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.1.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.1.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.1.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.2.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.2.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.2.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.3.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.3.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.3.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.3.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.4.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.4.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.4.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.4.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.4.4:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.5.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.5.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.6.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.6.1.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.6.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.6.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.0:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3.1:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3.2:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3.4:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3.7:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.7.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.9.11:*:*:*:*:*:*:*",
		"cpe:2.3:a:messagepack:messagepack:1.9.3:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.0:*:*:*:*:*:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.110:alpha:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.119:beta:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.123:beta:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.204:beta:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.270:rc:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.299:rc:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.323:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.335:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.0.94:alpha:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.1.80:*:*:*:*:c\\#:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.1.90:*:*:*:*:*:*:*",
		"cpe:2.3:a:messagepack:messagepack:2.6.95-alpha:*:*:*:*:*:*:*"
	]
}
