{
	"id": "CVE-2024-50200",
	"sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
	"vulnStatus": "Awaiting Analysis",
	"published": "2024-11-08T06:15:16.593",
	"lastModified": "2024-11-08T19:01:03.880",
	"descriptions": [
		{
			"lang": "en",
			"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmaple_tree: correct tree corruption on spanning store\n\nPatch series \"maple_tree: correct tree corruption on spanning store\", v3.\n\nThere has been a nasty yet subtle maple tree corruption bug that appears\nto have been in existence since the inception of the algorithm.\n\nThis bug seems far more likely to happen since commit f8d112a4e657\n(\"mm/mmap: avoid zeroing vma tree in mmap_region()\"), which is the point\nat which reports started to be submitted concerning this bug.\n\nWe were made definitely aware of the bug thanks to the kind efforts of\nBert Karwatzki who helped enormously in my being able to track this down\nand identify the cause of it.\n\nThe bug arises when an attempt is made to perform a spanning store across\ntwo leaf nodes, where the right leaf node is the rightmost child of the\nshared parent, AND the store completely consumes the right-mode node.\n\nThis results in mas_wr_spanning_store() mitakenly duplicating the new and\nexisting entries at the maximum pivot within the range, and thus maple\ntree corruption.\n\nThe fix patch corrects this by detecting this scenario and disallowing the\nmistaken duplicate copy.\n\nThe fix patch commit message goes into great detail as to how this occurs.\n\nThis series also includes a test which reliably reproduces the issue, and\nasserts that the fix works correctly.\n\nBert has kindly tested the fix and confirmed it resolved his issues.  Also\nMikhail Gavrilov kindly reported what appears to be precisely the same\nbug, which this fix should also resolve.\n\n\nThis patch (of 2):\n\nThere has been a subtle bug present in the maple tree implementation from\nits inception.\n\nThis arises from how stores are performed - when a store occurs, it will\noverwrite overlapping ranges and adjust the tree as necessary to\naccommodate this.\n\nA range may always ultimately span two leaf nodes.  In this instance we\nwalk the two leaf nodes, determine which elements are not overwritten to\nthe left and to the right of the start and end of the ranges respectively\nand then rebalance the tree to contain these entries and the newly\ninserted one.\n\nThis kind of store is dubbed a 'spanning store' and is implemented by\nmas_wr_spanning_store().\n\nIn order to reach this stage, mas_store_gfp() invokes\nmas_wr_preallocate(), mas_wr_store_type() and mas_wr_walk() in turn to\nwalk the tree and update the object (mas) to traverse to the location\nwhere the write should be performed, determining its store type.\n\nWhen a spanning store is required, this function returns false stopping at\nthe parent node which contains the target range, and mas_wr_store_type()\nmarks the mas->store_type as wr_spanning_store to denote this fact.\n\nWhen we go to perform the store in mas_wr_spanning_store(), we first\ndetermine the elements AFTER the END of the range we wish to store (that\nis, to the right of the entry to be inserted) - we do this by walking to\nthe NEXT pivot in the tree (i.e.  r_mas.last + 1), starting at the node we\nhave just determined contains the range over which we intend to write.\n\nWe then turn our attention to the entries to the left of the entry we are\ninserting, whose state is represented by l_mas, and copy these into a 'big\nnode', which is a special node which contains enough slots to contain two\nleaf node's worth of data.\n\nWe then copy the entry we wish to store immediately after this - the copy\nand the insertion of the new entry is performed by mas_store_b_node().\n\nAfter this we copy the elements to the right of the end of the range which\nwe are inserting, if we have not exceeded the length of the node (i.e. \nr_mas.offset <= r_mas.end).\n\nHerein lies the bug - under very specific circumstances, this logic can\nbreak and corrupt the maple tree.\n\nConsider the following tree:\n\nHeight\n  0                             Root Node\n                                 /      \\\n                 pivot = 0xffff /        \\ pivot = ULONG_MAX\n                               /          \n---truncated---"
		},
		{
			"lang": "es",
			"value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: maple_tree: corregir la corrupción del árbol en el almacén de expansión Serie de parches \"maple_tree: corregir la corrupción del árbol en el almacén de expansión\", v3. Ha habido un error de corrupción del árbol de maple desagradable pero sutil que parece haber existido desde el inicio del algoritmo. Este error parece mucho más probable que ocurra desde el commit f8d112a4e657 (\"mm/mmap: evitar poner a cero el árbol vma en mmap_region()\"), que es el punto en el que comenzaron a enviarse informes sobre este error. Nos enteramos definitivamente del error gracias a los amables esfuerzos de Bert Karwatzki, quien me ayudó enormemente a poder rastrearlo e identificar la causa. El error surge cuando se intenta realizar un almacenamiento de expansión en dos nodos de hoja, donde el nodo de hoja derecho es el hijo más a la derecha del padre compartido, y el almacenamiento consume por completo el nodo de modo derecho. Esto da como resultado que mas_wr_spanning_store() duplique por error las entradas nuevas y existentes en el pivote máximo dentro del rango, y por lo tanto la corrupción del árbol de maple. El parche de corrección corrige esto detectando este escenario y no permitiendo la copia duplicada errónea. El mensaje de confirmación del parche de corrección detalla en gran medida cómo ocurre esto. Esta serie también incluye una prueba que reproduce el problema de manera confiable y afirma que la corrección funciona correctamente. Bert ha probado amablemente la corrección y confirmó que resolvió sus problemas. Además, Mikhail Gavrilov informó amablemente lo que parece ser exactamente el mismo error, que esta corrección también debería resolver. Este parche (de 2): Ha habido un error sutil presente en la implementación del árbol de maple desde su inicio. Esto surge de cómo se realizan los almacenamientos: cuando se produce un almacenamiento, sobrescribirá los rangos superpuestos y ajustará el árbol según sea necesario para adaptarse a esto. Un rango siempre puede abarcar en última instancia dos nodos de hoja. En este caso, recorremos los dos nodos de hoja, determinamos qué elementos no se sobrescriben a la izquierda y a la derecha del inicio y el final de los rangos respectivamente y luego reequilibramos el árbol para que contenga estas entradas y la recién insertada. Este tipo de almacenamiento se denomina \"almacén de expansión\" y se implementa mediante mas_wr_spanning_store(). Para llegar a esta etapa, mas_store_gfp() invoca a mas_wr_preallocate(), mas_wr_store_type() y mas_wr_walk() a su vez para recorrer el árbol y actualizar el objeto (mas) para atravesar la ubicación donde se debe realizar la escritura, determinando su tipo de almacenamiento. Cuando se requiere un almacenamiento de expansión, esta función devuelve falso y se detiene en el nodo principal que contiene el rango de destino, y mas_wr_store_type() marca mas-&gt;store_type como wr_spanning_store para denotar este hecho. Cuando vamos a realizar el almacenamiento en mas_wr_spanning_store(), primero determinamos los elementos DESPUÉS del FINAL del rango que deseamos almacenar (es decir, a la derecha de la entrada que se insertará); lo hacemos caminando hasta el SIGUIENTE pivote en el árbol (es decir, r_mas.last + 1), comenzando en el nodo que acabamos de determinar que contiene el rango sobre el que pretendemos escribir. Luego dirigimos nuestra atención a las entradas a la izquierda de la entrada que estamos insertando, cuyo estado está representado por l_mas, y las copiamos en un \"nodo grande\", que es un nodo especial que contiene suficientes ranuras para contener los datos de dos nodos hoja. Luego copiamos la entrada que deseamos almacenar inmediatamente después de esto; la copia y la inserción de la nueva entrada se realiza mediante mas_store_b_node(). Después de esto, copiamos los elementos a la derecha del final del rango que estamos insertando, si no hemos excedido la longitud del nodo (es decir, r_mas.offset &lt;= r_mas.end).  ---truncado---"
		}
	],
	"references": [
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/677f1df179cb68c12ddf7707ec325eb50e99c7d9"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/7c7874977da9e47ca0f53d8b9a5b17385fed83f2"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/982dd0d26d1f015ed34866579480d2be5250b0ef"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/bea07fd63192b61209d48cbb81ef474cc3ee4c62"
		}
	],
	"metrics": {},
	"vcConfigurations": [
		{
			"nodes": [
				{
					"operator": "OR",
					"cpeMatch": [
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:6.1:*:*:*:*:*:*:*",
							"matchCriteriaId": ""
						},
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionStartIncluding": "6.1",
							"versionEndExcluding": "6.1.114"
						},
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionStartIncluding": "6.11",
							"versionEndExcluding": "6.11.5"
						},
						{
							"vulnerable": true,
							"criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
							"matchCriteriaId": "",
							"versionStartIncluding": "6.6",
							"versionEndExcluding": "6.6.58"
						}
					]
				}
			]
		}
	],
	"vcVulnerableCPEs": [
		"cpe:2.3:o:linux:linux_kernel:6.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.0:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.100:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.101:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.102:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.103:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.104:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.105:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.106:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.107:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.108:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.109:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.10:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.110:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.111:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.112:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.113:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.11:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.12:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.13:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.14:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.15:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.16:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.17:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.18:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.19:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.20:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.21:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.22:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.23:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.24:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.25:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.26:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.27:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.28:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.29:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.2:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.30:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.31:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.32:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.33:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.34:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.35:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.36:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.37:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.38:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.39:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.3:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.40:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.41:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.42:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.43:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.44:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.45:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.46:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.47:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.48:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.49:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.4:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.50:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.51:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.52:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.53:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.54:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.55:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.56:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.57:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.58:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.59:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.5:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.60:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.61:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.62:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.63:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.64:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.65:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.66:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.67:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.68:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.69:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.6:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.70:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.71:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.72:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.73:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.74:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.75:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.76:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.77:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.78:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.79:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.7:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.80:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.81:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.82:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.83:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.84:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.85:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.86:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.87:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.88:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.89:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.8:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.90:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.91:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.92:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.93:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.94:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.95:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.96:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.97:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.98:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.99:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1.9:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:-:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc1:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc2:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc3:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc4:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc5:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc6:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc7:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.1:rc8:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11.2:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11.3:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11.4:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:-:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc4:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc5:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc6:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc7:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.11:rc8:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.10:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.11:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.12:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.13:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.14:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.15:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.16:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.17:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.18:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.19:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.1:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.20:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.21:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.22:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.23:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.24:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.25:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.26:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.27:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.28:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.29:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.2:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.30:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.31:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.32:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.33:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.34:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.35:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.36:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.37:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.38:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.39:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.3:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.40:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.41:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.42:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.43:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.44:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.45:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.46:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.47:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.48:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.49:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.4:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.50:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.51:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.52:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.53:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.54:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.55:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.56:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.57:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.5:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.6:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.7:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.8:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6.9:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:*:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:-:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc1:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc2:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc3:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc4:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc5:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc6:*:*:*:*:*:*",
		"cpe:2.3:o:linux:linux_kernel:6.6:rc7:*:*:*:*:*:*"
	]
}
